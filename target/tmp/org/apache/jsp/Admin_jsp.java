/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/9.4.22.v20191022
 * Generated at: 2019-12-11 12:38:45 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import ru.nsu.flowerstore.Data;

public final class Admin_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("ru.nsu.flowerstore.Data");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <title>Admin</title>\r\n");
      out.write("    <style>\r\n");
      out.write("        input[type=\"text\"]{\r\n");
      out.write("            width: 300px;\r\n");
      out.write("            height:50px;\r\n");
      out.write("            font-size: 18px;\r\n");
      out.write("            margin-left: 25%;\r\n");
      out.write("            margin-bottom: 25px;\r\n");
      out.write("            border-radius: 4px;\r\n");
      out.write("            padding-left: 40px;\r\n");
      out.write("            font-family: \"Helvetica\", fantasy;\r\n");
      out.write("            position: center;\r\n");
      out.write("\r\n");
      out.write("        }\r\n");
      out.write("        .dws-input input:hover{\r\n");
      out.write("            box-shadow: 0 0 6px 3px #000000;\r\n");
      out.write("        }\r\n");
      out.write("        .dws-submit {\r\n");
      out.write("            padding: 13px 30px;\r\n");
      out.write("            margin: 5px 0 20px 50%;\r\n");
      out.write("            font-size: 15px;\r\n");
      out.write("            color: #ffffff;\r\n");
      out.write("            background-color: #000000;\r\n");
      out.write("            border: none;\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("        }\r\n");
      out.write("        .dws-submit:hover{\r\n");
      out.write("            transition: all 0.5s;\r\n");
      out.write("            background: #fff;\r\n");
      out.write("            color: #2c536c;\r\n");
      out.write("        }\r\n");
      out.write("        .container{\r\n");
      out.write("            width:450px;\r\n");
      out.write("            background-color: #4CAF50;\r\n");
      out.write("            margin: 100px auto 0 auto;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            padding-bottom: 20px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /*.dws-input::before{*/\r\n");
      out.write("        /*    font-family: Helvetica, fantasy;*/\r\n");
      out.write("        /*    content: \"\\f007\";*/\r\n");
      out.write("        /*    position: absolute;*/\r\n");
      out.write("        /*    font-size: 30px;*/\r\n");
      out.write("        /*    padding: 10px 0 0 7px;*/\r\n");
      out.write("        /*    color: #2c536c;*/\r\n");
      out.write("        /*}*/\r\n");
      out.write("        /*.dws-input:nth-child(2)::before{*/\r\n");
      out.write("        /*    content: \"\\f023\";*/\r\n");
      out.write("        /*}*/\r\n");
      out.write("        /*.dws-input:hover::before{*/\r\n");
      out.write("        /*    color: #319ebc;*/\r\n");
      out.write("        /*    transition: all 0.3s;*/\r\n");
      out.write("        /*}*/\r\n");
      out.write("\r\n");
      out.write("        h1, table {\r\n");
      out.write("            font-family: \"Helvetica\", fantasy;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div class=\"container\">\r\n");
      out.write("<h1>Панель администратора <span title=\"1. Значение суммы займа должно быть кратно 100. Минимальное допустимое\r\n");
      out.write("значение 500, максимальное 100 000. Мин. сумма займа должна быть меньше\r\n");
      out.write("макс. сумме займа\r\n");
      out.write("2. Длительность займа задается в месяцах. Минимальное значение 1 мес.,\r\n");
      out.write("максимальное 36 мес. Мин. сумма займа должна быть меньше макс. суммы\r\n");
      out.write("займа.\r\n");
      out.write("3. Годовая ставка задается в %. Минимальное значение 3%, максимальное 150%\">&#63;</span> </h1>\r\n");
      out.write("    ");
 Data data = request.getAttribute("data") != null ? (Data) request.getAttribute("data") : null; 
      out.write("\r\n");
      out.write("\r\n");
      out.write("    ");
 if (data != null) {
        for (String erorrMessage : data.getErrorMessages())  { 
      out.write("\r\n");
      out.write("    <p style=\"color: red\">\r\n");
      out.write("        ");
      out.print( "" + erorrMessage );
      out.write("\r\n");
      out.write("    </p>\r\n");
      out.write("\r\n");
      out.write("    ");
 }
    } 
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <form action=\"admin\" method=\"post\">\r\n");
      out.write("        <table>\r\n");
      out.write("            <tr><td><div class=\"dws-input\"><input type=\"text\" name = \"minSum\" placeholder=\"Мин. сумма займа\"/></div></td></tr>\r\n");
      out.write("            <tr><td><div class=\"dws-input\"><input type=\"text\" name = \"maxSum\" placeholder=\"Макс. сумма займа\"/></div></td></tr>\r\n");
      out.write("            <tr><td><div class=\"dws-input\"><input type=\"text\" name = \"minMonth\" placeholder=\"Мин. длит-ть займа\"/></div></td></tr>\r\n");
      out.write("            <tr><td><div class=\"dws-input\"><input type=\"text\" name = \"maxMonth\" placeholder=\"Макс. длит-ть займа\"/></div></td></tr>\r\n");
      out.write("            <tr><td><div class=\"dws-input\"><input type=\"text\" name = \"intRate\" placeholder=\"Годовая % ставка\"/></div></td></tr>\r\n");
      out.write("            <tr><td><input type=\"submit\" value=\"Применить\" class=\"dws-submit\" ></td></tr>\r\n");
      out.write("        </table>\r\n");
      out.write("    </form>\r\n");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
